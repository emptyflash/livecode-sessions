uniform u_time : Float
uniform u_resolution : Vec2
uniform u_audio : Vec4

domain_warping p = let
    q = vec3 (fbm p) (fbm (p + vec3 5.2 1.3 0.0)) p.z
    r_1 = p + vec3 4.0 4.0 4.0 * q + vec3 1.7 9.2 0.0
    r_2 = p + vec3 4.0 4.0 4.0 * q + vec3 8.3 2.8 0.0
    r = vec3 (fbm r_1) (fbm r_2) p.z
    in fbm (p + vec3 4.0 4.0 4.0 * r)

main coord = let
    st = coord / u_resolution
    st_2 = kaleid st (1.0 * cos u_time + 2.0)
    pos = vec3 (st_2.x * 1.0) (st_2.y * 0.5 * sin u_time) (cos u_time)
    pos_2 = vec3 (domain_warping pos) (domain_warping pos) (domain_warping pos)
    r = domain_warping pos_2
    g = domain_warping (vec3 r r pos_2.z - vec3 st.x st_2.y 0.0)
    b = domain_warping (vec3 g g pos.z + vec3 st.y st_2.x 0.0)
    color = vec4 r b g 1.0
    in color
